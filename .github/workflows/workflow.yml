name: Illia Workflow

on:
  push:
    branches: "*"
  pull_request:
    branches: [main, dev]

env:
  SRC_PROJECT_FOLDER: "illia"
  SRC_PROJECT_TESTS_TF: "tests/tf"
  SRC_PROJECT_TESTS_TORCH: "tests/torch"
  SRC_PROJECT_TESTS_JAX: "tests/jax"
  SRC_PYTHON_VERSION: "3.11"

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  setup-lint:
    name: Setup and Lint Illia Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python environment and dependencies
        uses: ./.github/actions/setup-python-env
        with:
          src-python-version: ${{ env.SRC_PYTHON_VERSION }}
          dependencies: "pipeline"

      - name: Check code format, syntax and quality
        uses: ./.github/actions/lint-code
        with:
          src-project-folder: ${{ env.SRC_PROJECT_FOLDER }}

      - name: Run Bandit Security Scan
        uses: ./.github/actions/security
        with:
          src-project-folder: ${{ env.SRC_PROJECT_FOLDER }}
          src-exclude: "tests/"

  test-frameworks:
    name: Test ${{ matrix.framework }} code
    runs-on: ubuntu-latest
    needs: setup-lint

    strategy:
      fail-fast: false
      matrix:
        include:
          - framework: PyTorch
            test-folder: tests/torch
          - framework: TensorFlow
            test-folder: tests/tf

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python environment and dependencies
        uses: ./.github/actions/setup-python-env
        with:
          src-python-version: ${{ env.SRC_PYTHON_VERSION }}
          dependencies: "pipeline"

      - name: Test ${{ matrix.framework }} code
        uses: ./.github/actions/test-code
        with:
          src-tests-folder: ${{ matrix.test-folder }}

      - name: Run Nox (only on merge to main)
        run: nox
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

  build-mkdocs:
    name: Build MkDocs Illia Wiki
    runs-on: ubuntu-latest
    needs: [setup-lint, test-frameworks]

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python environment and dependencies
        uses: ./.github/actions/setup-python-env
        with:
          src-python-version: ${{ env.SRC_PYTHON_VERSION }}
          dependencies: "documentation"

      - name: Build MkDocs
        uses: ./.github/actions/build-mkdocs

  deploy-mkdocs:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy MkDocs Wiki to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-mkdocs

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
